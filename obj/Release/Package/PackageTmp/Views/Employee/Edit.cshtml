@model FederalTimeTracker.Models.Employee

@{
    ViewBag.Title = "Edit";
}


<h2>Edit Employee Information: @Model.FullName</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true)
        @Html.HiddenFor(model => model.EmployeeId)
        
        
        <div class="form-group">
            @Html.LabelFor(model => model.SAMAccountName, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.SAMAccountName, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.SAMAccountName)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FullName, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.FullName, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.FullName)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FirstName, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.FirstName, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.FirstName)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LastName, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.LastName, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.LastName)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MiddleName, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.MiddleName, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.MiddleName)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Title, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Title, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Title)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Role, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                
                @Html.DropDownListFor(model => model.Role, new SelectList(Enum.GetValues(typeof(FederalTimeTracker.Models.Role))), new { @class = "form-control" })

                @Html.ValidationMessageFor(model => model.Role)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EmployeeType, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                
                @Html.DropDownListFor(model => model.EmployeeType, new SelectList(Enum.GetValues(typeof(FederalTimeTracker.Models.EmployeeType))), new { @class = "form-control" })

                @Html.ValidationMessageFor(model => model.EmployeeType)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EmailID, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.EmailID, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.EmailID)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Active, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Active)
                @Html.ValidationMessageFor(model => model.Active)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CreatedBy, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.CreatedBy) @Html.DisplayFor(model => model.CreatedDate)
                @Html.ValidationMessageFor(model => model.CreatedBy)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ModifiedBy, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.ModifiedBy) @Html.DisplayFor(model => model.ModifiedDate)
                @Html.ValidationMessageFor(model => model.ModifiedBy)
            </div>
        </div>

   

        <div class="form-group">
            @Html.LabelFor(model => model.Note, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Note, 5, 20, new { @class = "form-control boxsizingBorder" })



                @Html.ValidationMessageFor(model => model.Note)
            </div>
        </div>
     

        <div class="form-group">
            <div class="col-md-2">
            
                @Html.ActionLink("« Back to Employee List", "Index", new { controller = "Employee" }, new { @class = "btn btn-default" })


            </div>
            <div class="col-md-10">
                @*@Html.ActionLink("Save »", "Details", new { controller = "Project", id = Model.ProjectId }, new { @class = "btn btn-primary" })*@

                <input type="submit" value="Save  »" class="btn btn-primary" />
              
            </div>
        </div>

    </div>
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
